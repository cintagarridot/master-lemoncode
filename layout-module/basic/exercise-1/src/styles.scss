@use "base" as *;

@for $j from 1 through 3 {
  .container-#{$j} {
    $color: var(--base-color-container-#{$j});
    @extend .container;

    .base-color {
      background-color: $color;
      color: white;
    }
    
    .font {
      color: grey;
      font-weight: bold;
    }

    .box {
      @extend .box-style;
      border: 2px solid $color;
    }
  }
}

/* Necesito ir contenedor a contenedor indicando los colores porque las funciones darken y lighten requieren un color valido para hacer los calculos,
y durante el tiempo de compilacion lo que obtiene si uso variables es var(--base-color-container-#{j}) y no el color en si.
*/
.container-1 {
  @for $i from 1 through 4 {
    .darken-#{$i} {
      @extend .font;
      background-color: darken(red, 5 * $i);
      border: 2px solid darken(red, 5 * $i);
    }
    .lighten-#{$i} {
      @extend .font;
      background-color: lighten(red, 12 * $i);
      border: 2px solid lighten(red, 12 * $i);
    }
  }
}

.container-2 {
  @for $i from 1 through 4 {
    .darken-#{$i} {
      @extend .font;
      background-color: darken(blue, 5 * $i);
      border: 2px solid darken(blue, 5 * $i);
    }
    .lighten-#{$i} {
      @extend .font;
      background-color: lighten(blue, 12 * $i);
      border: 2px solid lighten(blue, 12 * $i);
    }
  }
}

.container-3 {
  @for $i from 1 through 4 {
    .darken-#{$i} {
      @extend .font;
      background-color: darken(green, 5 * $i);
      border: 2px solid darken(green, 5 * $i);
    }
    .lighten-#{$i} {
      @extend .font;
      background-color: lighten(green, 12 * $i);
      border: 2px solid lighten(green, 12 * $i);
    }
  }
}



